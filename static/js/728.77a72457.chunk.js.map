{"version":3,"file":"static/js/728.77a72457.chunk.js","mappings":"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","sources":["components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","components/pages/MainPage.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport mjolnir from \"../../resources/img/mjolnir.png\";\r\nimport \"./randomChar.scss\";\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nconst RandomChar = () => {\r\n  const [char, setChar] = useState(null);\r\n  const {loading, error, clearError, getCharacter} = useMarvelService();\r\n\r\n  useEffect(() => {\r\n    updateChar();\r\n    const timerId = setInterval(updateChar, 60000);\r\n    return () => {\r\n      clearInterval(timerId);\r\n    };\r\n  },[])\r\n\r\n  const onCharLoaded = (char) => {\r\n    setChar(char);\r\n  };\r\n\r\n  const updateChar = () => {\r\n    clearError();\r\n    const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\r\n    getCharacter(id).then(onCharLoaded);\r\n  };\r\n\r\n\r\n  const errMessage = error ? <ErrorMessage /> : null;\r\n  const spinner = loading ? <Spinner /> : null;\r\n  const content = !(loading || error) ? <View char={char} /> : null;\r\n\r\n  return (\r\n    <div className=\"randomchar\">\r\n      {errMessage}\r\n      {spinner}\r\n      {content}\r\n      <div className=\"randomchar__static\">\r\n        <p className=\"randomchar__title\">\r\n          Random character for today!\r\n          <br />\r\n          Do you want to get to know him better?\r\n        </p>\r\n        <p className=\"randomchar__title\">Or choose another one</p>\r\n        <button className=\"button button__main\" onClick={updateChar}>\r\n          <div className=\"inner\">try it</div>\r\n        </button>\r\n        <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst View = ({ char }) => {\r\n  if (char!=null){\r\n    const { name, description, thumbnail, homepage, wiki } = char;\r\n    let imgStyle = { objectFit: \"cover\" };\r\n    if (\r\n      thumbnail ===\r\n      \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\r\n    ) {\r\n      imgStyle = { objectFit: \"contain\" };\r\n    }\r\n    return (\r\n      <div className=\"randomchar__block\">\r\n        <img\r\n          src={thumbnail}\r\n          alt=\"Random character\"\r\n          className=\"randomchar__img\"\r\n          style={imgStyle}\r\n        />\r\n        <div className=\"randomchar__info\">\r\n          <p className=\"randomchar__name\">{name}</p>\r\n          <p className=\"randomchar__descr\">{description}</p>\r\n          <div className=\"randomchar__btns\">\r\n            <a href={homepage} className=\"button button__main\">\r\n              <div className=\"inner\">homepage</div>\r\n            </a>\r\n            <a href={wiki} className=\"button button__secondary\">\r\n              <div className=\"inner\">Wiki</div>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (null);\r\n  }\r\n};\r\n\r\nexport default RandomChar;\r\n","import { useState,useEffect, useRef } from \"react\";\nimport { PropTypes } from \"prop-types\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport \"./charList.scss\";\n\nconst CharList=(props)=>{\n  const [charList, setCharList]=useState([]);\n  const [newItemLoading, setNewItemLoading ]=useState(false);\n  const [offset, setOffset ]=useState(210);\n  const [charEnded, setCharEnded ]=useState(false);\n\n  const {loading, error, getAllCharacters} =useMarvelService();\n\n  console.log('CharList.render');\n  useEffect(()=>{\n    onRequest(offset, true);\n  },[]);\n\n  const onRequest = (offset, initial) => {\n    initial ? setNewItemLoading(false):setNewItemLoading(true);\n    getAllCharacters(offset)\n      .then(onCharListLoaded)\n  };\n\n  const onCharListLoaded = (newCharList) => {\n    let ended = false;\n    if (newCharList.length < 9) {\n      ended = true;\n    }\n    setCharList(charList=>[...charList, ...newCharList]);\n    setNewItemLoading(newItemLoading=>false);\n    setOffset(offset=>offset+9);\n    setCharEnded(charEnded=>ended);\n  }\n\n  const itemRefs = useRef([]);\n\n  const focusOnItem = (id) => {\n    itemRefs.current.forEach((item) =>\n      item.classList.remove(\"char__item_selected\")\n    );\n    itemRefs.current[id].classList.add(\"char__item_selected\");\n    itemRefs.current[id].focus();\n  };\n\n  // Этот метод создан для оптимизации,\n  // чтобы не помещать такую конструкцию в метод render\n  function renderItems(arr) {\n    const items = arr.map((item, i) => {\n      let imgStyle = { objectFit: \"cover\" };\n      if (\n        item.thumbnail ===\n        \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n      ) {\n        imgStyle = { objectFit: \"unset\" };\n      }\n\n      return (\n        <li\n          className=\"char__item\"\n          key={item.id}\n          ref={el=>itemRefs.current[i]=el}\n          onClick={() => {\n            props.onCharSelected(item.id);\n            focusOnItem(i);\n          }}\n          onKeyPress={(e) => {\n            if (e.key === \" \" || e.key === \"Enter\") {\n              props.onCharSelected(item.id);\n              focusOnItem(i);\n            }\n          }}\n        >\n          <img src={item.thumbnail} alt={item.name} style={imgStyle} />\n          <div className=\"char__name\">{item.name}</div>\n        </li>\n      );\n    });\n    // А эта конструкция вынесена для центровки спиннера/ошибки\n    return <ul className=\"char__grid\">{items}</ul>;\n  }\n\n  const items = renderItems(charList);\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading && !newItemLoading ? <Spinner /> : null;\n\n  return (\n    <div className=\"char__list\">\n      {errorMessage}\n      {spinner}\n      {items}\n      <button\n        className=\"button button__main button__long\"\n        disabled={newItemLoading}\n        style={{ display: charEnded ? \"none\" : \"block\" }}\n        onClick={() => onRequest(offset)}\n      >\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  );\n}\n\nCharList.propTypes = {\n  onCharSelected: PropTypes.func.isRequired,\n};\n\nexport default CharList;\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n  return (\n    <>\n      <p className=\"char__select\">Please select a character to see information</p>\n      <div className=\"skeleton\">\n        <div className=\"pulse skeleton__header\">\n          <div className=\"pulse skeleton__circle\"></div>\n          <div className=\"pulse skeleton__mini\"></div>\n        </div>\n        <div className=\"pulse skeleton__block\"></div>\n        <div className=\"pulse skeleton__block\"></div>\n        <div className=\"pulse skeleton__block\"></div>\n      </div>\n    </>\n)\n}\n\nexport default Skeleton;","import { useState, useEffect} from \"react\";\nimport { PropTypes } from \"prop-types\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport Skeleton from \"../skeleton/Skeleton\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport \"./charInfo.scss\";\n\nconst CharInfo=(props)=>{\n  const [char, setChar]=useState(null);\n\n  const {loading, error, getCharacter, clearError} = useMarvelService();\n\n  useEffect(()=>{\n    updateChar();\n  },[props.charId]);\n\n  const onCharLoaded = (char) => {\n    setChar(char);\n  };\n\n  const updateChar = () => {\n    const { charId } = props;\n    if (!charId) {\n      return;\n    }\n    clearError();\n    getCharacter(charId)\n      .then(onCharLoaded)\n  };\n\n  const skeleton = char || loading || error ? null : <Skeleton />;\n  const errMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading ? <Spinner /> : null;\n  const content = !(loading || error || !char) ? <View char={char} /> : null;\n\n  return (<div className=\"char__info\">\n    {skeleton}\n    {errMessage}\n    {spinner}\n    {content}\n  </div>\n  );\n}\nconst View = ({ char }) => {\n  const { name, description, thumbnail, homepage, wiki, comics } = char;\n  let imgStyle = {'objectFit' : 'cover'};\n  if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n      imgStyle = {'objectFit' : 'contain'};\n  }\n  return (\n    <>\n      <div className=\"char__basics\">\n        <img src={thumbnail} alt=\"Chart info\" style={imgStyle}/>\n        <div>\n          <div className=\"char__info-name\">{name}</div>\n          <div className=\"char__btns\">\n            <a href={homepage} className=\"button button__main\">\n              <div className=\"inner\">Homepage</div>\n            </a>\n            <a href={wiki} className=\"button button__secondary\">\n              <div className=\"inner\">Wiki</div>\n            </a>\n          </div>\n        </div>\n      </div>\n      <div className=\"char__descr\">\n        {description}\n      </div>\n      <div className=\"char__comics\">Comics:</div>\n      <ul className=\"char__comics-list\">\n        {comics.length > 0 ? null : 'There is no comics with this character'}\n        {\n          comics.map((item,i)=>{\n            // eslint-disable-next-line array-callback-return\n            if (i > 9) return;\n            return(\n              <li key={i} className=\"char__comics-item\">\n                {item.name}\n              </li>\n            )\n          })\n        }\n      </ul>\n    </>\n  );\n};\n\nCharInfo.propTypes={\n  charId:PropTypes.number,\n  \n}\n\nexport default CharInfo;\n","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    // static getDerivedStateFromError(error){\r\n    //   return{error:true}\r\n    // }\r\n    \r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error, errorInfo);\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import { useState } from \"react\";\r\n\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\n\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\n\r\nconst MainPage = ()=>{\r\n  const[selectedChar,setChar]=useState(null);\r\n\r\n  const onCharSelected=(id)=>{\r\n    setChar(id);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ErrorBoundary>\r\n        <RandomChar/>\r\n      </ErrorBoundary>\r\n      <div className=\"char__content\">\r\n        <ErrorBoundary>\r\n          <CharList onCharSelected={onCharSelected}/>\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <CharInfo charId={selectedChar}/>\r\n        </ErrorBoundary>\r\n      </div>\r\n      <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MainPage;"],"names":["View","_ref","char","name","description","thumbnail","homepage","wiki","imgStyle","objectFit","_jsxs","className","children","_jsx","src","alt","style","href","_useState","useState","_useState2","_slicedToArray","setChar","_useMarvelService","useMarvelService","loading","error","clearError","getCharacter","useEffect","updateChar","timerId","setInterval","clearInterval","onCharLoaded","id","Math","floor","random","then","errMessage","ErrorMessage","spinner","Spinner","content","onClick","mjolnir","props","charList","setCharList","_useState3","_useState4","newItemLoading","setNewItemLoading","_useState5","_useState6","offset","setOffset","_useState7","_useState8","charEnded","setCharEnded","getAllCharacters","console","log","onRequest","initial","onCharListLoaded","newCharList","ended","length","concat","_toConsumableArray","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","items","arr","map","i","ref","el","onCharSelected","onKeyPress","e","key","renderItems","errorMessage","disabled","display","_Fragment","comics","charId","skeleton","Skeleton","ErrorBoundary","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","args","Array","_key","call","apply","state","_createClass","value","errorInfo","this","setState","Component","selectedChar","RandomChar","CharList","CharInfo","decoration"],"sourceRoot":""}