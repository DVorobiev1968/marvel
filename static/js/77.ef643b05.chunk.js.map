{"version":3,"file":"static/js/77.ef643b05.chunk.js","mappings":"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","sources":["components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"sourcesContent":["import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import {useState, useEffect} from 'react';\nimport { Link } from 'react-router-dom';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './comicsList.scss';\n\nconst ComicsList = () => {\n\n  const [comicsList, setComicsList] = useState([]);\n  const [newItemLoading, setnewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(0);\n  const [comicsEnded, setComicsEnded] = useState(false);\n\n  const {loading, error, getAllComics} = useMarvelService();\n\n  useEffect(() => {\n      onRequest(offset, true);\n  }, [])\n\n  const onRequest = (offset, initial) => {\n      initial ? setnewItemLoading(false) : setnewItemLoading(true);\n      getAllComics(offset)\n          .then(onComicsListLoaded)\n  }\n\n  const onComicsListLoaded = (newComicsList) => {\n    let ended = false;\n    if (newComicsList.length < 8) {\n        ended = true;\n    }\n    setComicsList([...comicsList, ...newComicsList]);\n    setnewItemLoading(false);\n    setOffset(offset + 8);\n    setComicsEnded(ended);\n  }\n\n  function renderItems (arr) {\n    const items = arr.map((item, i) => {\n      return (\n        <li className=\"comics__item\" key={i}>\n          <Link to={`/comics/${item.id}`}>\n            <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\n            <div className=\"comics__item-name\">{item.title}</div>\n            <div className=\"comics__item-price\">{item.price}</div>\n          </Link>\n        </li>\n      )\n    })\n\n    return (\n      <ul className=\"comics__grid\">\n        {items}\n      </ul>\n    )\n  }\n\n  const items = renderItems(comicsList);\n\n  const errorMessage = error ? <ErrorMessage/> : null;\n  const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n  return (\n    <div className=\"comics__list\">\n      {errorMessage}\n      {spinner}\n      {items}\n      <button \n        disabled={newItemLoading} \n        style={{'display' : comicsEnded ? 'none' : 'block'}}\n        className=\"button button__main button__long\"\n        onClick={() => onRequest(offset)}>\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  )\n}\n\nexport default ComicsList;","import AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\n\r\nconst ComicsPage=()=>{\r\n  return (\r\n    <>\r\n      <AppBanner/>\r\n      <ComicsList/>\r\n    </>\r\n  )\r\n}\r\nexport default ComicsPage;"],"names":["_jsxs","className","children","_jsx","src","avengers","alt","avengersLogo","_useState","useState","_useState2","_slicedToArray","comicsList","setComicsList","_useState3","_useState4","newItemLoading","setnewItemLoading","_useState5","_useState6","offset","setOffset","_useState7","_useState8","comicsEnded","setComicsEnded","_useMarvelService","useMarvelService","loading","error","getAllComics","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","concat","_toConsumableArray","items","arr","map","item","i","Link","to","id","thumbnail","title","price","renderItems","errorMessage","ErrorMessage","spinner","Spinner","disabled","style","onClick","_Fragment","AppBanner","ComicsList"],"sourceRoot":""}